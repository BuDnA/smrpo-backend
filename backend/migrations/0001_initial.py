# Generated by Django 2.0.3 on 2018-03-26 18:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllowedRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id_board', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('notify_overdue_n_days', models.IntegerField()),
                ('display_priority', models.BooleanField(default=False)),
                ('display_size', models.BooleanField(default=False)),
                ('display_deadline', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id_card', models.AutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1024)),
                ('size', models.FloatField()),
                ('number', models.IntegerField()),
                ('type_silver', models.BooleanField(default=False)),
                ('type_rejected', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField()),
                ('completed_at', models.DateTimeField()),
                ('started_at', models.DateTimeField()),
                ('deadline', models.DateField()),
                ('display_offset', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CardLog',
            fields=[
                ('id_card_log', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('id_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Card')),
            ],
        ),
        migrations.CreateModel(
            name='CardPriority',
            fields=[
                ('id_card_priority', models.AutoField(primary_key=True, serialize=False)),
                ('value', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id_column', models.AutoField(primary_key=True, serialize=False)),
                ('wip_restriction', models.FloatField()),
                ('display_offset', models.IntegerField()),
                ('title', models.CharField(max_length=100)),
                ('id_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Board')),
                ('id_parent_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Column')),
            ],
        ),
        migrations.CreateModel(
            name='ColumnPermissions',
            fields=[
                ('id_column_permissions', models.AutoField(primary_key=True, serialize=False)),
                ('allow', models.BooleanField(default=False)),
                ('id_from_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='column_permissions_from_column', to='backend.Column')),
            ],
        ),
        migrations.CreateModel(
            name='DeleteReason',
            fields=[
                ('id_delete_reason', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='DeveloperGroup',
            fields=[
                ('id_developer_group', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DeveloperGroupMembership',
            fields=[
                ('id_developer_group_membership', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField()),
                ('active', models.BooleanField(default=False)),
                ('id_developer_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.DeveloperGroup')),
            ],
        ),
        migrations.CreateModel(
            name='GroupRole',
            fields=[
                ('id_group_role', models.AutoField(primary_key=True, serialize=False)),
                ('id_developer_group_membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.DeveloperGroupMembership')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id_project', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=300)),
                ('started_at', models.DateField()),
                ('ended_at', models.DateField()),
                ('active', models.BooleanField(default=False)),
                ('id_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Board')),
                ('id_developer_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.DeveloperGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id_role', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id_task', models.AutoField(primary_key=True, serialize=False)),
                ('estimated_hours', models.IntegerField()),
                ('description', models.CharField(max_length=400)),
                ('done', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id_user', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('activate', models.BooleanField(default=False)),
                ('display_critical_cards_n_days', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='WipViolation',
            fields=[
                ('id_wip_violation', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('id_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Card')),
                ('id_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Column')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User')),
            ],
        ),
        migrations.CreateModel(
            name='WipViolationReason',
            fields=[
                ('id_wip_violation_reason', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.AddField(
            model_name='wipviolation',
            name='id_wip_violation_reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.WipViolationReason'),
        ),
        migrations.AddField(
            model_name='task',
            name='id_assigned_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AddField(
            model_name='task',
            name='id_card',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Card'),
        ),
        migrations.AddField(
            model_name='grouprole',
            name='id_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Role'),
        ),
        migrations.AddField(
            model_name='developergroupmembership',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AddField(
            model_name='columnpermissions',
            name='id_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Role'),
        ),
        migrations.AddField(
            model_name='columnpermissions',
            name='id_to_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='column_permission_to_column', to='backend.Column'),
        ),
        migrations.AddField(
            model_name='cardlog',
            name='id_from_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_log_from_column', to='backend.Column'),
        ),
        migrations.AddField(
            model_name='cardlog',
            name='id_to_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_log_to_column', to='backend.Column'),
        ),
        migrations.AddField(
            model_name='card',
            name='id_assigned_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AddField(
            model_name='card',
            name='id_card_priority',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.CardPriority'),
        ),
        migrations.AddField(
            model_name='card',
            name='id_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Column'),
        ),
        migrations.AddField(
            model_name='card',
            name='id_delete_reason',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.DeleteReason'),
        ),
        migrations.AddField(
            model_name='card',
            name='id_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Project'),
        ),
        migrations.AddField(
            model_name='board',
            name='id_type_acceptance_testing_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_acceptance_testing_column', to='backend.Column'),
        ),
        migrations.AddField(
            model_name='board',
            name='id_type_left_border_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_left_border_column', to='backend.Column'),
        ),
        migrations.AddField(
            model_name='board',
            name='id_type_priority_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_priority_column', to='backend.Column'),
        ),
        migrations.AddField(
            model_name='board',
            name='id_type_right_border_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_right_border_column', to='backend.Column'),
        ),
        migrations.AddField(
            model_name='allowedrole',
            name='id_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Role'),
        ),
        migrations.AddField(
            model_name='allowedrole',
            name='id_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AlterUniqueTogether(
            name='allowedrole',
            unique_together={('id_user', 'id_role')},
        ),
    ]
